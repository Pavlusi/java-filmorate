DROP TABLE IF EXISTS film_likes;
DROP TABLE IF EXISTS user_friends;
DROP TABLE IF EXISTS genre;
DROP TABLE IF EXISTS rating;
DROP TABLE IF EXISTS films;
DROP TABLE IF EXISTS users;

CREATE TABLE IF NOT EXISTS genre (
                                     id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                     name VARCHAR(200) NOT NULL
);

CREATE TABLE IF NOT EXISTS rating (
                                      id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                      name VARCHAR(200) NOT NULL
);

CREATE TABLE IF NOT EXISTS films (
                                     id INT  GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                     name VARCHAR(200) NOT NULL,
                                     description VARCHAR(200),
                                     release_date DATE,
                                     duration INT CHECK (duration >= 0),
                                     genre_id INT REFERENCES genre(id),
                                     rating_id INT REFERENCES rating(id)
);

CREATE TABLE IF NOT EXISTS users (
                                     id INT  GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                     email VARCHAR(255) NOT NULL UNIQUE,
                                     login VARCHAR(100) NOT NULL UNIQUE,
                                     name VARCHAR(255),
                                     birthday DATE
);

CREATE TABLE film_likes (
                            user_id BIGINT NOT NULL,
                            film_id BIGINT NOT NULL,
                            PRIMARY KEY (user_id, film_id),
                            FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE,
                            FOREIGN KEY (film_id) REFERENCES films(id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS user_friends (
                                            user_id BIGINT NOT NULL REFERENCES users(id) ON DELETE CASCADE,
                                            friend_id BIGINT NOT NULL REFERENCES users(id) ON DELETE CASCADE,
                                            status VARCHAR(30) NOT NULL,
                                            PRIMARY KEY (user_id, friend_id)
);





